version: 0.2

env:
  variables:
    AWS_REGION: us-east-1
    AWS_ACCOUNT_ID: 425697928416
    AWS_SERVICE_NAME: .dkr.ecr.
    AWS_DOMAIN_NAME: .amazonaws.com/vois
    IMAGE_NAME: aws-codebuild-locally-build-docker-image
    CONTAINER_NAME: aws-codebuild-locally-build-docker-container


phases:
  install:
    commands:
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/aws-iam-authenticator
      - curl -sS -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.20.4/2021-04-12/bin/linux/amd64/kubectl
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD/:$PATH



  pre_build:
    commands:
      - REPOSITORY_URL="$AWS_ACCOUNT_ID$AWS_SERVICE_NAME$AWS_REGION$AWS_DOMAIN_NAME"
      - echo $REPOSITORY_URL
      - echo Setting up docker
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPOSITORY_URL
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY:$TAG"'@' eks-deployment.yml
      - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URL:latest .
    
     
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URL:latest
      - echo Writing image definitions file...
      - printf '[{"name":"nodeapp","imageUri":"%s"}]' $REPOSITORY_URL:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json 
artifacts:
    files: imagedefinitions.json
